@page "/freightquotations"
@using FerrexWeb.Models
@using FerrexWeb.Services
@using System.Security.Claims
@inject FreightQuotationService FreightQuotationService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div class="container my-5">
    <h1 class="text-center mb-4">Mis Cotizaciones de Fletes</h1>

    @if (freightQuotations == null)
    {
        <div class="d-flex justify-content-center align-items-center full-height">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
        </div>
    }
    else if (!freightQuotations.Any())
    {
        <p class="text-center">No tienes cotizaciones de fletes.</p>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Número de Cotización</th>
                        <th>Origen</th>
                        <th>Destino</th>
                        <th>Fecha</th>
                        <th>Total</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var fq in freightQuotations)
                    {
                        <tr>
                            <td>@fq.QuotationNumber</td>
                            <td>@fq.Origin</td>
                            <td>@fq.Destination</td>
                            <td>@fq.FreightDate.ToString("dd/MM/yyyy")</td>
                            <td>@fq.TotalCost.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-HN"))</td>
                            <td>
                                <span class="@GetStatusBadgeClass(fq.Status)">@GetStatusText(fq.Status)</span>
                            </td>
                            <td>
                                <button class="btn btn-info btn-sm" @onclick="() => ViewQuotation(fq)">
                                    <i class="fas fa-eye"></i> Ver
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- Modal para visualizar la ruta de la cotización -->
<div id="viewModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h4 class="modal-title text-center mb-3">Detalle de la Cotización</h4>
        <div class="mb-2">
            <strong>Origen:</strong> <span id="modalOrigin"></span>
        </div>
        <div class="mb-3">
            <strong>Destino:</strong> <span id="modalDestination"></span>
        </div>
        <div id="modalMapContainer" style="height: 400px; width: 100%; border: 1px solid #ddd; border-radius: 5px;"></div>
    </div>  
</div>

<style>
    /* Estilos para el modal */
    .modal {
        display: none;
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #fff;
        margin: 10% auto;
        padding: 20px;
        border-radius: 8px;
        max-width: 600px;
        position: relative;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }

    .close {
        color: #aaa;
        position: absolute;
        top: 10px;
        right: 15px;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover {
            color: #000;
        }
    /* Badges para el estado */
    .badge {
        padding: 0.5em 0.75em;
        border-radius: 0.5rem;
        font-size: 0.9em;
    }

    .bg-warning {
        background-color: #ffc107 !important;
        color: #212529;
    }

    .bg-primary {
        background-color: #007bff !important;
        color: #fff;
    }

    .bg-danger {
        background-color: #dc3545 !important;
        color: #fff;
    }

    .bg-secondary {
        background-color: #6c757d !important;
        color: #fff;
    }
</style>

@code {
    private List<FreightQuotation> freightQuotations;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/userinfo?returnUrl=/freightquotations");
            return;
        }
        var userIdString = user.FindFirstValue(ClaimTypes.NameIdentifier);
        if (!int.TryParse(userIdString, out int userId))
        {
            freightQuotations = new List<FreightQuotation>();
            return;
        }
        freightQuotations = await FreightQuotationService.GetQuotationsByUserIdAsync(userId);
    }

    private string GetStatusText(int status) => status switch
    {
        0 => "Cotización",
        1 => "Ordenada",
        2 => "Expirada",
        _ => "Desconocido"
    };

    private string GetStatusBadgeClass(int status) => status switch
    {
        0 => "badge bg-warning",
        1 => "badge bg-primary",
        2 => "badge bg-danger",
        _ => "badge bg-secondary"
    };

    private async Task ViewQuotation(FreightQuotation fq)
    {
        await JS.InvokeVoidAsync("showQuotationModal", fq.Origin, fq.Destination);
    }
}