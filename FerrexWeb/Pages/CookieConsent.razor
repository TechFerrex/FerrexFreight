@using FerrexWeb.Services
@using FerrexWeb.Models
@using Microsoft.EntityFrameworkCore;
@inject IHttpContextAccessor HttpContextAccessor
@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@inject ILocalStorageService LocalStorageService

@if (!policyAccepted)
{
    <div class="alert alert-warning" style="position: fixed; bottom: 0; width: 100%; z-index: 10000;">
        <div class="d-flex align-items-center justify-content-between">
            <span>
                Usamos cookies para mejorar la experiencia de usuario. Al seguir usando la página web asumimos que aceptas las cookies automáticamente.
                <a href="/politica-cookies" target="_blank">Ver detalles</a>.
            </span>
            <button class="btn btn-primary" @onclick="AcceptCookies">Acepto</button>
        </div>
    </div>
}

@code {
    private bool policyAccepted = false;
    private string sessionId = string.Empty;
    private bool hasLoadedLocalStorage = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            policyAccepted = await LocalStorageService.GetItemAsync<bool>("PolicyAccepted");
            hasLoadedLocalStorage = true;

            if (!policyAccepted)
            {
                // Aquí si quieres puedes obtener sessionId
                var context = HttpContextAccessor.HttpContext;
                if (context != null)
                {
                    sessionId = context.Session.Id;
                }
            }
            StateHasChanged();
        }
    }

    private async Task AcceptCookies()
    {
        policyAccepted = true;
        await LocalStorageService.SetItemAsync("PolicyAccepted", true);

        if (!string.IsNullOrEmpty(sessionId))
        {
            using var dbContext = DbContextFactory.CreateDbContext();
            var visitor = dbContext.Visitor
                .Where(v => v.SessionId == sessionId)
                .OrderByDescending(v => v.CreatedTime)
                .FirstOrDefault();

            if (visitor != null)
            {
                visitor.PolicyAccepted = true;
                dbContext.Update(visitor);
                await dbContext.SaveChangesAsync();
            }
        }
    }
}